<div class="container-fluid captcha2">
  <%= _.template($('#path').html())({selector:selector}) %>
  <%= _.template($('#input_constructor').html())({id:"Method", description:tr("Solve Method"), default_selector: "string", disable_int:true, value_string: "manual", variants: ["manual","rucaptcha-newapi","2captcha-newapi","antigate-newapi", "capmonsterimage","capmonsteraudio","dbc", "rucaptcha", "2captcha", "antigate", "captchaguru-newapi"], size: 3, help: {description: tr("Solve method is a string, you can set value directly or use variable or resource. In newapi mode BAS computes special hash and sends it to service instead of image, service returns another hash which is sent to site with recaptcha. After hash is applied captcha is guaranteed to be solved. The main advantage of newapi method is that you pay only once for solve one captcha. Always prefer newapi methods over standart, it saves money and works faster. Important notice: newapi method doesn't set recaptcha checkbox. This may give the impression that nothing happened and captcha is still unsolved. It is not true, you can proceed with your action and site will count catcha as solved."), examples:[{code:"manual",description:tr("Image is solved directly by person who uses BAS.")},{code:"antigate-newapi",description:tr("Solve with http://anti-captcha.com/ service")},{code:"rucaptcha-newapi",description:tr("Solve with http://rucaptcha.com/ service")},{code:"2captcha-newapi",description:tr("Solve with http://2captcha.com/ service")},{code:"capmonterimage",description:tr("Use capmonster image solver")},{code:"dbc",description:tr("Use http://deathbycaptcha.com/ service")}]}}) %>
  <%= _.template($('#input_constructor').html())({id:"Rucaptcha", description:tr("Antigate/Rucaptcha/2captcha/DBC Key. Can be blank"), default_selector: "string", disable_int:true, help: {description: tr("This key is needed only if you are using services to solve captcha. It is not needed in manual, capmonsterimage and capmonsteraudio modes. In case of deathbycaptcha this field must contain dbc_login:dbc:password.")}}) %>
  <div style="margin-left: 20px;">
  	<input type="checkbox" id="AdvancedCheck" onchange="$('#Advanced').toggle()" /> 
  	<label for="AdvancedCheck" class="tr" >Advanced settings.</label>
  </div>


  <span id="Advanced" style="display:none">
	  <%= _.template($('#input_constructor').html())({id:"TimesToSolve", description:tr("How many times try to solve"), default_selector: "int", disable_string:true, value_number: 10, size: 3, help: {description: tr("In case if captcha won't be solved for a certain amount of tries, this action will fail. This is done to avoid infinite money spend. This parameter sets maximum allowed solve tries.")}
}) %>
	  <%= _.template($('#input_constructor').html())({id:"Server", description:tr("Server url. Can be blank"), default_selector: "string", disable_int:true, help: {description: tr("String which contains server url."), examples:[{code:"http://127.0.0.3:8083/"},{code:tr("Empty string"), description: tr("Use default server url, http://rucaptcha.com for rucaptcha, etc")}]}}) %>
	  <%= _.template($('#input_constructor').html())({id:"Tasks", description:tr("Tasks words. Only for capmonster"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("List of task which are sent to capmonsterimage solver. If task doesn't contain any of these words, current recaptcha challenge will be skipped.")}
}) %>
    <%= _.template($('#input_constructor').html())({id:"SendProxy", description:tr("Send current proxy to solver service"), default_selector: "string", disable_int:true, value_string: "false", variants: ["true","false"], help: {description: tr("Forces person who solves recaptcha use proxy that you setted up with \"Proxy\" action. Works only on newapi methods."), examples:[{code:"true",description:tr("Use proxy to solve captcha on service in newapi mode. Proxy value is obtained from \"Proxy\" action.")},{code:"false",description:tr("Don't send proxy. Default value.")}]}}) %>

	  <span data-preserve="true" data-preserve-type="check" data-preserve-id="Check" class="disable-if-find-by-image">
	    <input type="checkbox" id="Check"/> <label for="Check" class="tr">Disable mouse emulation.</label>
	  </span>
  </span>
</div>
<div class="tooltipinternal">
  <div class="tr tooltip-paragraph-first-fold">This action solves google recaptcha 2.0.</div>
  <div class="tooltip-paragraph-fold"><span class="tr">All you need to do is to click on any element inside recaptcha box, for example, on text "I'm not a robot" or a checkbox which is located to the left of the text</span>(<a href="#" class="tr" onclick="BrowserAutomationStudio_OpenUrl('http://wiki.bablosoft.com/lib/exe/fetch.php?cache=&media=wheretoclickoncaptcha.png'); return false;">screen</a>). <span class="tr">Choose "Solve Recaptcha 2.0" and click ok button</span>(<a href="#" class="tr" onclick="BrowserAutomationStudio_OpenUrl('https://www.youtube.com/watch?v=3AXjUH08qxg'); return false;">video</a>).</div>
  <div class="tr tooltip-paragraph-fold">By default solver type is manual, which means that BAS user must answer image challenges manually. But you can change it by editing "Solve Method" parameter.</div> 
  <div class="tooltip-paragraph-fold"><span class="tr">Manual solver shows image to user and requires answer as text. This text is correct image indexes separated by spaces, commas or completely without separator. Here are some valid examples: 1,5,9 or 1 5 9 or 159. If captcha has 16 blocks, than answer should have separator: 7,13,15 or 7 13 15. This is not valid: <strike>71315</strike>. Image indexes are increased from left to right and from top to bottom like on</span> <a href="#" class="tr" onclick="BrowserAutomationStudio_OpenUrl('http://wiki.bablosoft.com/lib/exe/fetch.php?cache=&media=captchaimagenumbers.png'); return false;">screenshot</a>.</div>
  <div class="tr tooltip-paragraph-fold">BAS also allows to use services to solve recapt—Åha, list of services: rucaptcha.com, 2captcha.com, anti-captcha.com(antigate), deathbycaptcha.com(dbc). Most of these services(all except dbc) are present in two modes: standart and newapi mode. So, for example, if you choose rucaptcha solver, this means that rucaptcha.com service is used with standart mode, if you choose rucpatcha-newapi you also use rucaptcha.com service but with newapi mode.</div>
  <div class="tr tooltip-paragraph-fold">In standart mode BAS renders recaptcha image and sends it to service, which means that you are paying for every image shown on a single captcha challenge. In newapi mode BAS computes special hash and sends it to service instead of image, service returns another hash which is sent to site with recaptcha. After hash is applied captcha is guaranteed to be solved. The main advantage of newapi method is that you pay only once for solve one captcha.</div>
  <div class="tr tooltip-paragraph-fold">Important notice: newapi method doesn't set recaptcha checkbox. This may give the impression that nothing happened and captcha is still unsolved. It is not true, you can proceed with your action and site will count catcha as solved.</div>
  <div class="tr tooltip-paragraph-fold">If newapi method is used, captcha is solved on service worker pc, it means that google can check ip of a person who gets images and ban it. It does not happen now, but could happend later. There is a special configuration option "Send current proxy to solver service"(behind "Advanced settings" checkbox) which forces person who solves recaptcha use proxy that you setted up with "Proxy" action.</div>

  <div class="tr tooltip-paragraph-fold">All service requires service key which should be bought on service site and inputted into "Antigate/Rucaptcha/2captcha/DBC Key" field. Manual and capmonster solvers don't require any key.</div>
  
  <div class="tr tooltip-paragraph-fold">capmonsterimage and capmonsteraudio requires capmonster software installed and running, it also requires "Server url" parameter, which is locatted behind "Advanced settings" checkbox. "Server url" is url where capmonster is running. Url must end with /. For example, http://127.0.0.3:8083/</div>
  <div class="tr tooltip-paragraph-fold">capmonsteraudio works with alternative way to solve captcha - recognizing audio files. It may end with "Ip banned" message rather soon, so it is better to use capmonsterimage solver.</div>
  <div class="tr tooltip-paragraph-fold">If you are working with real browser, your recaptcha challenge may pass automatically and you don't need to solve any image. You may wonder, why BAS displays captcha every time. The reason of this is your profile and google service authorization. If you have logined into gmail with BAS and have mature account you'll have reacaptcha challage passed automatically. On the contrary, if you clear all your cookies and user data in real browser, recaptcha will show you images.</div>
  <div class="tooltip-paragraph-last-fold"><span class="tr">There is another type of recaptcha called invisible recaptcha. It does not require the user to click on a checkbox, instead it is invoked directly when the user clicks on an existing button on site or can be invoked via a javascript call. BAS is capable of solving it and procedure is pretty same as for standart recaptcha, but instead of clicking on checkbox, you need to click on any image option and apply this action</span>(<a class="tr" href="#" onclick="BrowserAutomationStudio_OpenUrl('https://www.youtube.com/watch?v=ltWy6O9jsTo'); return false;">video</a>).</div>

</div>

<%= _.template($('#back').html())({action:"executeandadd", visible:true, name: tr("Solve Recaptcha 2.0")}) %>
