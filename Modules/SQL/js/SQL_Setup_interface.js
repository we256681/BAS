<div class="container-fluid">
<%= _.template($('#input_constructor').html())({id:"dialect", description:tr("Database dialect"), default_selector: "string", variants:["mysql<br/><span style='color:gray;font-size:small'>MySQL</span>","mariadb<br/><span style='color:gray;font-size:small'>MariaDB</span>","postgres<br/><span style='color:gray;font-size:small'>PostgreSQL</span>","sqlite<br/><span style='color:gray;font-size:small'>SQLite</span>","mssql<br/><span style='color:gray;font-size:small'>MicrosoftSQL</span>"], disable_int:true, value_string: "mysql", help: {description: tr("Dialect of SQL database.")} }) %>
<%= _.template($('#input_constructor').html())({id:"host", description:tr("Host name") + ". " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("Host (URL or IP) of the database."),examples:[{code:"my.server.tld"},{code:"db.server.com"},{code:"96.256.27.26"},{code:tr("Empty string"), description: tr("localhost")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"port", description:tr("Port") + ". " + tr("Can be blank"), default_selector: "string", variants:["auto<br/><span style='color:gray;font-size:small'>" + tr("Automatically detect port based on dialect") + "</span>","3306<br/><span style='color:gray;font-size:small'>" + tr("Default port for MySQL and MariaDB dialects") + "</span>","5432<br/><span style='color:gray;font-size:small'>" + tr("Default port for PostgreSQL dialect") + "</span>","1433<br/><span style='color:gray;font-size:small'>" + tr("Default port for MicrosoftSQL dialect") + "</span>"], value_string: "auto", help: {description: tr("Database port."),examples:[{code:"auto",description:tr("Automatically detect port based on dialect")},{code:3306,description:tr("Default port for MySQL and MariaDB dialects")},{code:5432,description:tr("Default port for PostgreSQL dialect")},{code:1433,description:tr("Default port for MicrosoftSQL dialect")},{code:tr("Empty string"), description: tr("Automatically detect port based on dialect")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"username", description:tr("Username") + ". " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("Username of the database.")} }) %>
<%= _.template($('#input_constructor').html())({id:"password", description:tr("Password") + ". " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("Password of the database.")} }) %>
<%= _.template($('#input_constructor').html())({id:"database", description:tr("Database name") + ". " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("Database name") + "."} }) %>
<%= _.template($('#input_constructor').html())({id:"storage", description:tr("Database storage") + ". " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("The path to the database storage. Only used by SQLite."),examples:[{code:"{{db_storage}}"},{code:"C:/sqlite3/my.db"},{code:"D:/sqlite/your.db"},{code:tr("Empty string"), description: tr(":memory:")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"connect_timeout", description:tr("Connection timeout (seconds)") + ". " + tr("Can be blank"), default_selector: "int", disable_string:true, value_number: "", min_number:1, max_number:999999, help: {description: tr("The number of seconds after which the connection to the database will be considered unsuccessful. If not specified, the default value for the dialect used will be used."),examples:[{code:tr("Empty string"), description: tr("The default timeout for the dialect being used")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"timeout", description:tr("Timeout (seconds)"), default_selector: "int", disable_string:true, value_number: 300, min_number:0, max_number:999999, help: {description: tr("This action won't start connection, it only sets configuration. Connection will be established after first attempt to access the database. When action, which triggers connection will be finished, connection won't be closed immediately.") + " " + tr("It will be preserved for a time specified in this parameter.") + " " + tr("If another action will require access to database, connection will be reused.")} }) %>
<%= _.template($('#block_start').html())({id:"Additional", name: tr("Additional settings"), description: ""}) %>
<%= _.template($('#input_constructor').html())({id:"dialect_options", description:tr("Dialect options"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("Additional options, which are passed directly to the connection library. Object or json string containing options."),examples:[{code:"{multipleStatements: true}"},{code:"{options: {ssl: true}}"},{code:"[[OPTIONS_OBJECT]]"}]} }) %>
<%= _.template($('#block_end').html())() %>
</div>
<div class="tooltipinternal">
	<div class="tr tooltip-paragraph-first-fold">Setup access to SQL database.</div>
	<div class="tr tooltip-paragraph-fold">This action should be called once before any other action that works with the SQL database.</div>
	<div class="tooltip-paragraph-fold"><span class="tr">This action won't start connection, it only sets configuration. Connection will be established after first attempt to access the database. When action, which triggers connection will be finished, connection won't be closed immediately.</span> <span class="tr">It will be preserved for a time specified in "Timeout" parameter.</span> <span class="tr">If another action will require access to database, connection will be reused.</span></div>
	<div class="tr tooltip-paragraph-fold">You don't need to close connection explicitly, it will be closed automatically after timeout or when the script will stop.</div>
	<div class="tr tooltip-paragraph-fold">If a resource is specified in the "Database storage" parameter, resource location will be used.</div>
	<div class="tr tooltip-paragraph-last-fold">In additional settings, you can specify dialect options. For example, use <code>{multipleStatements: true}</code> to enable multiple statements in one for MySQL and MariaDB.</div>
</div>
<%= _.template($('#back').html())({action:"executeandadd", visible:true}) %>
