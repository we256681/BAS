<div class="container-fluid">
<%= _.template($('#input_constructor').html())({id:"File1", description:tr("File") + " 1. " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("The path to the file which needs be added to archive."),examples:[{code:"C:/path/to/file1.txt"},{code:tr("Empty string"), description: tr("The parameters \"File 2\", \"File 3\", \"List of files\" will be used")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"File2", description:tr("File") + " 2. " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("The path to the file which needs be added to archive."),examples:[{code:"C:/path/to/file2.txt"},{code:tr("Empty string"), description: tr("The parameters \"File 1\", \"File 3\", \"List of files\" will be used")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"File3", description:tr("File") + " 3. " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("The path to the file which needs be added to archive."),examples:[{code:"C:/path/to/file3.txt"},{code:tr("Empty string"), description: tr("The parameters \"File 1\", \"File 2\", \"List of files\" will be used")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"ListOfFiles", description:tr("List of files") + ". " + tr("Can be blank"), default_selector: "string", disable_int:true, value_string: "", help: {description: tr("List of paths to the files which needs be added to archive. The list can be created using actions from the \"List\" module.") + " " + tr("As a list, you can use a string consisting of file paths, separated by commas."),examples:[{code:"C:/path/to/file1.txt,C:/path/to/file2.txt,C:/path/to/file3.txt"},{code:"C:/path/to/file1.txt, C:/path/to/file2.txt, C:/path/to/file3.txt"},{code:"[\"C:/path/to/file1.txt\", \"C:/path/to/file2.txt\", \"C:/path/to/file3.txt\"]"},{code:tr("Empty string"), description: tr("The parameters \"File 1\", \"File 2\", \"File 3\" will be used")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"ArchiveType", description:tr("Archive type"), default_selector: "string", variants: ["auto","zip","7z"], disable_int:true, value_string: "auto", help: {description:tr("The archive type is usually written in the file extension. But there are exceptions, such as Chrome extensions files have the extension .crx, but are zip archive with additional headers."),examples:[{code:"auto", description: tr("The archive type will be determined by the file extension") + " " + tr("in the destination path")}]} }) %>
<%= _.template($('#input_constructor').html())({id:"DestinationPath", description:tr("Destination path"), default_selector: "string", disable_int:true, value_string: "", help: {description:tr("The path to the location where the archive will be saved."),examples:[{code:"C:/test.zip"},{code:"C:/Program Files/test.7z"}]} }) %>
</div>
<div class="tooltipinternal">
	<div class="tr tooltip-paragraph-first-fold">Archive files and save the archive to the specified location.</div>
	<div class="tr tooltip-paragraph-fold">Files from separate fields and the list are added to a general list of files that will be archived.</div>
	<div class="tr tooltip-paragraph-fold">For example, if a file is specified in the "File 1" field and a list of 4 files is specified in the "List of files" field, then 5 files will be archived.</div>
	<div class="tr tooltip-paragraph-fold">If some of the parameters ("File 1", "File 2", "File 3", "List of files") are not specified, all parameters will be used except for them.</div>
	<div class="tr tooltip-paragraph-fold">For example, if "List of files" is not specified, then the list will be formed from the parameters "File 1" and "File 2" and "File 3". If the parameters "File 1", "File 2", "File 3" are empty, then the "List of files" will be used. If all parameters are specified, then all of them will be used.</div>
	<div class="tr tooltip-paragraph-fold">The list can be created using actions from the "List" module.</div>
	<div class="tr tooltip-paragraph-fold">This action works with both files and folders.</div>
	<div class="tr tooltip-paragraph-fold">If a non-existent destination path is specified, it will be created.</div>
	<div class="tr tooltip-paragraph-fold">If with same name archive already exists along the destination path, it will be overwritten.</div>
	<div class="tr tooltip-paragraph-last-fold">If an error occurred while execute action, the thread will stop with fail message. If you want to continue thread, use "Ignore errors" action.</div>
</div>
<%= _.template($('#back').html())({action:"executeandadd",use_timeout: true, visible:true}) %>